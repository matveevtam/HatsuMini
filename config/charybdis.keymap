#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define LAYER_DVORAK  0
#define LAYER_QWERTY  1
#define LAYER_SPEC    2
#define LAYER_NUMBER  3
#define LAYER_NAV     4
#define LAYER_FN      5
#define LAYER_HOTKEY  6
#define LAYER_MOUSE   7
#define LAYER_SNIPE   8
#define LAYER_SCROLL  9

#define LT_SPC  &lt LAYER_SPEC
#define LT_NUM  &lt LAYER_NUMBER
#define LT_NAV  &lt LAYER_NAV
#define LT_FN   &lt LAYER_FN
#define LT_MOU  &lt LAYER_MOUSE
#define LT_SCR  &lt LAYER_SCROLL


/ {
    behaviors {
        tog_on: toggle_layer_on_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer On";
            toggle-mode = "on";
        };

        tog_off: toggle_layer_off_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };
    };

    macros {

        macro_email: macro_email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K &kp V &kp M &kp A &kp T &kp V &kp E &kp E &kp V &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "Email Macro";
        };

        macro_switch_language: macro_switch_language {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tog LAYER_QWERTY &kp LA(SPACE)>;
            label = "Switch Language Macro";
        };

    };

    /*
        key positions:
        0  1  2  3  4  5     6  7  8  9  10 11
        12 13 14 15 16 17    18 19 20 21 22 23
        24 25 26 27 28 29    30 31 32 33 34 35
                 36 37 38    39 40
    */

    combos {
        compatible = "zmk,combos";

        combo_esc {
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };


        combo_reset_to_dvorak_layer {
            key-positions = <0 12>;
            bindings = <&to LAYER_DVORAK>;
        };


        combo_toggle_nav_layer {
            key-positions = <17 36>;
            bindings = <&tog LAYER_NAV>;
        };
        combo_toggle_mouse_layer {
            key-positions = <16 36>;
            bindings = <&tog LAYER_MOUSE>;
        };
        combo_switch_language {
            key-positions = <15 36>;
            bindings = <&macro_switch_language>;
        };
        combo_toggle_number_layer {
            key-positions = <14 36>;
            bindings = <&tog LAYER_NUMBER>;
        };
        combo_toggle_special_layer {
            key-positions = <26 36>;
            bindings = <&tog LAYER_SPEC>;
        };
        combo_toggle_fn_layer {
            key-positions = <13 36>;
            bindings = <&tog LAYER_FN>;
        };


        combo_rclk {
            key-positions = <39 40>;
            bindings = <&mkp RCLK>;
        };

        // row 1
        combo_slash {
            key-positions = <7 8>;
            layers = <LAYER_DVORAK LAYER_SPEC>;
            bindings = <&kp SLASH>;
        };
        combo_backslash {
            key-positions = <8 9>;
            layers = <LAYER_DVORAK LAYER_SPEC>;
            bindings = <&kp BACKSLASH>;
        };
        combo_minus {
            key-positions = <7 8 9>;
            layers = <LAYER_DVORAK LAYER_SPEC>;
            bindings = <&kp MINUS>;
        };
        // row 2
        combo_paren_left {
            key-positions = <19 20>;
            layers = <LAYER_DVORAK LAYER_SPEC LAYER_NUMBER>;
            bindings = <&kp LPAR>;
        };
        combo_paren_right {
            key-positions = <20 21>;
            layers = <LAYER_DVORAK LAYER_SPEC LAYER_NUMBER>;
            bindings = <&kp RPAR>;
        };
        // row 3
        combo_bracket_left {
            key-positions = <31 32>;
            layers = <LAYER_DVORAK LAYER_SPEC LAYER_NUMBER>;
            bindings = <&kp LEFT_BRACKET>;
        };
        combo_bracket_right {
            key-positions = <32 33>;
            layers = <LAYER_DVORAK LAYER_SPEC LAYER_NUMBER>;
            bindings = <&kp RIGHT_BRACKET>;
        };

        // NUMBER: add =+ key
        combo_number_equal {
            key-positions = <7 8>;
            layers = <LAYER_NUMBER>;
            bindings = <&kp EQUAL>;
        };

        // CYRILLIC: missing characters and specials
        combo_cyrillic_question_mark {
            key-positions = <7 8>;
            layers = <LAYER_QWERTY>;
            bindings = <&kp LS(N7)>;
        };
        combo_cyrillic_h {
            key-positions = <8 9>;
            layers = <LAYER_QWERTY>;
            bindings = <&kp LEFT_BRACKET>;
        };
        combo_cyrillic_hard_sign {
            key-positions = <9 10>;
            layers = <LAYER_QWERTY>;
            bindings = <&kp RIGHT_BRACKET>;
        };
        combo_cyrillic_minus {
            key-positions = <7 8 9>;
            layers = <LAYER_QWERTY>;
            bindings = <&kp MINUS>;
        };
        combo_cyrillic_paren_left {
            key-positions = <19 20>;
            layers = <LAYER_QWERTY>;
            bindings = <&kp LPAR>;
        };
        combo_cyrillic_paren_right {
            key-positions = <20 21>;
            layers = <LAYER_QWERTY>;
            bindings = <&kp RPAR>;
        };
        combo_cyrillic_e {
            key-positions = <21 22>;
            layers = <LAYER_QWERTY>;
            bindings = <&kp APOS>;
        };
        combo_cyrillic_semicolon {
            key-positions = <32 33>;
            layers = <LAYER_QWERTY>;
            bindings = <&kp LS(N4)>;
        };
        combo_cyrillic_colon {
            key-positions = <33 34>;
            layers = <LAYER_QWERTY>;
            bindings = <&kp LS(N6)>;
        };
        
    };

    keymap {
        compatible = "zmk,keymap";

        layer_dvorak {
            label = "Dvorak";
            bindings = <
                &kp GRAVE    &kp SEMI   &kp COMMA    &kp DOT    &kp P       &kp Y               &kp F    &kp G    &kp C       &kp R    &kp L    &kp BACKSPACE
                &kp TAB      LT_FN A    LT_NUM O     &kp E      LT_MOU U    LT_NAV I            &kp D    &kp H    LT_SCR T    &kp N    &kp S    &kp ENTER
                &kp LSHFT    &kp APOS   LT_SPC Q     &kp J      &kp K       &kp X               &kp B    &kp M    &kp W       &kp V    &kp Z    &kp DELETE

                                                 &kp SPACE    &kp LCTRL    &kp LMETA           &mkp LCLK    &kp LALT
            >;
        };

        layer_qwerty {
            label = "Qwerty";
            bindings = <
                &kp GRAVE    &kp Q      &kp W        &kp E    &kp R       &kp T               &kp Y    &kp U    &kp I       &kp O      &kp P            &trans
                &trans       LT_FN A    LT_NUM S     &kp D    LT_MOU F    LT_NAV G            &kp H    &kp J    LT_SCR K    &kp L      &kp SEMICOLON    &trans
                &trans       &kp Z      LT_SPC X     &kp C    &kp V       &kp B               &kp N    &kp M    &kp COMMA   &kp DOT    &kp SLASH        &trans

                                                     &trans    &trans    &trans              &trans             &trans
            >;
        };


        layer_special {
            label = "Special";
            bindings = <
                &trans    &trans    &trans    &trans    &trans    &trans            &trans    &kp AMPS    &kp ASTRK        &kp EQUAL    &trans    &trans
                &trans    &trans    &trans    &trans    &trans    &trans            &trans    &kp DLLR    LT_SCR PRCNT     &kp CARET    &trans    &trans
                &trans    &trans    &trans    &trans    &trans    &trans            &trans    &kp EXCL    &kp AT           &kp HASH     &trans    &trans

                                              &trans    &trans    &trans            &trans    &trans
            >;
        };


        layer_number {
            label = "Number";
            bindings = <
                &trans    &trans    &trans    &trans    &trans    &trans            &trans      &kp N7    &kp N8        &kp N9    &kp SLASH    &trans
                &trans    &trans    &trans    &trans    &trans    &trans            &kp PLUS    &kp N4    LT_SCR N5     &kp N6    &kp ASTRK    &trans
                &trans    &trans    &trans    &trans    &trans    &trans            &kp N0      &kp N1    &kp N2        &kp N3    &kp DOT      &trans

                                              &trans    &trans    &trans            &trans      &trans
            >;
        };

        layer_nav {
            label = "Navigation";
            bindings = <
                &trans    &trans    &trans    &trans    &trans    &trans            &trans    &kp HOME    &trans      &kp PG_UP    &trans    &trans
                &trans    &trans    &trans    &trans    &trans    &trans            &trans    &kp END     &kp UP      &kp PG_DN    &trans    &trans
                &trans    &trans    &trans    &trans    &trans    &trans            &trans    &kp LEFT    &kp DOWN    &kp RIGHT    &trans    &trans

                                              &trans    &trans    &trans            &trans        &trans
            >;
        };

        layer_fn {
            label = "FN";
            bindings = <
                &trans        &kp F9    &kp F10    &kp F11    &kp F12    &trans            &trans    &kp F9    &kp F10    &kp F11    &kp F12    &trans
                &sys_reset    &kp F5    &kp F6     &kp F7     &kp F8     &trans            &trans    &kp F5    &kp F6     &kp F7     &kp F8     &sys_reset
                &trans        &kp F1    &kp F2     &kp F3     &kp F4     &trans            &trans    &kp F1    &kp F2     &kp F3     &kp F4     &trans

                                                     &trans    &trans    &trans            &trans    &trans
            >;
        };
        
        layer_hotkey {
            label = "Hotkey";
            bindings = <
                &trans    &trans    &trans    &trans    &trans    &trans            &trans    &trans    &trans    &trans    &trans    &trans
                &trans    &trans    &trans    &trans    &trans    &trans            &trans    &trans    &trans    &trans    &trans    &trans
                &trans    &trans    &trans    &trans    &trans    &trans            &trans    &trans    &trans    &trans    &trans    &trans

                                              &trans    &trans    &trans            &trans    &trans
            >;
        };

        layer_mouse {
            label = "Mouse";
            bindings = <
                &trans    &trans    &trans    &trans    &trans    &trans            &trans    &trans       &trans              &trans       &trans             &trans
                &trans    &trans    &trans    &trans    &trans    &trans            &trans    &mkp LCLK    &mo LAYER_SCROLL    &mkp RCLK    &trans             &trans
                &trans    &trans    &trans    &trans    &trans    &trans            &trans    &mkp MB4     &mkp MCLK           &mkp MB5     &mo LAYER_SNIPE    &trans

                                              &trans    &trans    &trans            &trans    &trans
            >;
        };
        
        layer_snipe {
            label = "Snipe";
            bindings = <
                &trans    &trans    &trans    &trans    &trans    &trans            &trans    &trans    &trans    &trans    &trans    &trans
                &trans    &trans    &trans    &trans    &trans    &trans            &trans    &trans    &trans    &trans    &trans    &trans
                &trans    &trans    &trans    &trans    &trans    &trans            &trans    &trans    &trans    &trans    &trans    &trans
                                                                    
                                              &trans    &trans    &trans            &trans    &trans
            >;
        };
        
        layer_scroll {
            label = "Scroll";
            bindings = <
                &trans    &trans    &trans    &trans    &trans    &trans            &trans    &trans    &trans    &trans    &trans    &trans
                &trans    &trans    &trans    &trans    &trans    &trans            &trans    &trans    &trans    &trans    &trans    &trans
                &trans    &trans    &trans    &trans    &trans    &trans            &trans    &trans    &trans    &trans    &trans    &trans
                                                                    
                                              &trans    &trans    &trans            &trans    &trans
            >;
        };

        /*
        // empty_layer {
        //     label = "Empty";
        //     bindings = <
        //         &trans    &trans    &trans    &trans    &trans    &trans            &trans    &trans    &trans    &trans    &trans    &trans
        //         &trans    &trans    &trans    &trans    &trans    &trans            &trans    &trans    &trans    &trans    &trans    &trans
        //         &trans    &trans    &trans    &trans    &trans    &trans            &trans    &trans    &trans    &trans    &trans    &trans
        //                                                                                                                                     
        //                                       &trans    &trans    &trans            &trans    &trans
        //     >;
        // };
        */

    };
};
