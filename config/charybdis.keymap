#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define LAYER_DVORAK  0
#define LAYER_QWERTY  1
#define LAYER_SPEC    2
#define LAYER_NUMBER  3
#define LAYER_NAV     4
#define LAYER_FN      5
#define LAYER_HOTKEY  6
#define LAYER_MOUSE   7
#define LAYER_SNIPE   8
#define LAYER_SCROLL  9


#define TYPING_LAYERS \
    LAYER_DVORAK \
    LAYER_QWERTY \
    LAYER_SPEC \
    LAYER_NUMBER \
    LAYER_NAV

#define TYPING_LAYERS_NO_QWERTY \
    LAYER_DVORAK \
    LAYER_SPEC \
    LAYER_NUMBER \
    LAYER_NAV

#define ALL_LAYERS_NO_QWERTY \
    LAYER_DVORAK \
    LAYER_SPEC \
    LAYER_NUMBER \
    LAYER_NAV \
    LAYER_FN \
    LAYER_HOTKEY \
    LAYER_MOUSE \
    LAYER_SNIPE \
    LAYER_SCROLL


#define LR_DVO LAYER_DVORAK
#define LR_QWE LAYER_QWERTY
#define LR_SPC LAYER_SPEC
#define LR_NUM LAYER_NUMBER
#define LR_NAV LAYER_NAV
#define LR_FN  LAYER_FN
#define LR_HOT LAYER_HOTKEY
#define LR_MOU LAYER_MOUSE
#define LR_SNP LAYER_SNIPE
#define LR_SCR LAYER_SCROLL


#define LT_SPC      &lt  LAYER_SPEC
#define LLT_SPC     &llt LAYER_SPEC
#define MO_SPC      &mo  LAYER_SPEC
#define LT_NUM      &lt  LAYER_NUMBER
#define LLT_NUM     &llt LAYER_NUMBER
#define MO_NUM      &mo  LAYER_NUMBER
#define LT_NAV      &lt  LAYER_NAV
#define LLT_NAV     &llt LAYER_NAV
#define MO_NAV      &mo  LAYER_NAV
#define LT_FN       &lt  LAYER_FN
#define LLT_FN      &llt LAYER_FN
#define MO_FN       &mo  LAYER_FN
#define LT_MOU      &lt  LAYER_MOUSE
#define LLT_MOU     &llt LAYER_MOUSE
#define MO_MOU      &mo  LAYER_MOUSE
#define LT_SCR      &lt  LAYER_SCROLL
#define LLT_SCR     &llt LAYER_SCROLL
#define MO_SCR      &mo  LAYER_SCROLL
#define LT_HOT      &lt  LAYER_HOTKEY
#define LLT_HOT     &llt LAYER_HOTKEY
#define MO_HOT      &mo  LAYER_HOTKEY


#define LANG_TOGGLE LA(SPACE)


#define LMOD 36
#define RMOD 40

#define HML_SHF    &hml LSHFT
#define HML_ALT    &hml LALT
#define HML_CMD    &hml LCMD
#define HML_CTR    &hml LCTRL

#define HMR_CTR    &hmr LCTRL
#define HMR_CMD    &hmr LCMD
#define HMR_ALT    &hmr LALT
#define HMR_SHF    &hmr LSHFT


/ {
    behaviors {
        tog_on: toggle_layer_on_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer On";
            toggle-mode = "on";
        };

        tog_off: toggle_layer_off_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };

        lmt: layer_mouse_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&mkp>;
            display-name = "Layer-Mouse-Tap";
        };

        llt: layer_language_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&macro_switch_language_hold>, <&kp>;
            display-name = "Layer-Language-Tap v2";
        };

        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <
                6  7  8  9  10 11
                18 19 20 21 22 23
                30 31 32 33 34 35
                39 40
            >;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <
                0  1  2  3  4  5 
                12 13 14 15 16 17
                24 25 26 27 28 29
                         36 37 38
            >;
            hold-trigger-on-release;
        };
    };

    macros {

        macro_switch_language: macro_switch_language {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to1>, <&macro_tap &to MACRO_PLACEHOLDER>, <&macro_tap &kp LANG_TOGGLE>;
            display-name = "Switch Language Macro";
        };

        macro_switch_language_hold: macro_switch_language_hold {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings 
                = <&macro_tap &kp LANG_TOGGLE>
                , <&macro_param_1to1>
                , <&macro_press &mo MACRO_PLACEHOLDER>
                , <&macro_pause_for_release>
                , <&macro_param_1to1>
                , <&macro_release &mo MACRO_PLACEHOLDER>
                , <&macro_tap &kp LANG_TOGGLE>
                ;
            display-name = "Switch Language Hold Macro";
        };

    };

    /*
        key positions:
        0  1  2  3  4  5     6  7  8  9  10 11
        12 13 14 15 16 17    18 19 20 21 22 23
        24 25 26 27 28 29    30 31 32 33 34 35
                 36 37 38    39 40
    */

    combos {
        compatible = "zmk,combos";

    // ======== Common keys ========
        combo_esc {
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        combo_ralt {
            key-positions = <12 24>;
            bindings = <&kp RALT>;
        };
        combo_mb3 {
            key-positions = <39 40>;
            bindings = <&mkp MB3>;
        };
        // left hand
        combo_paren_left_lh {
            key-positions = <14 15>;
            layers = <TYPING_LAYERS>;
            bindings = <&kp LPAR>;
        };
        combo_paren_right_lh {
            key-positions = <15 16>;
            layers = <TYPING_LAYERS>;
            bindings = <&kp RPAR>;
        };
        combo_bracket_left_lh {
            key-positions = <2 3>;
            layers = <TYPING_LAYERS_NO_QWERTY>;
            bindings = <&kp LEFT_BRACKET>;
        };
        combo_bracket_right_lh {
            key-positions = <3 4>;
            layers = <TYPING_LAYERS_NO_QWERTY>;
            bindings = <&kp RIGHT_BRACKET>;
        };
        // right hand
        combo_paren_left_rh {
            key-positions = <19 20>;
            layers = <TYPING_LAYERS_NO_QWERTY>;
            bindings = <&kp LPAR>;
        };
        combo_paren_right_rh {
            key-positions = <20 21>;
            layers = <TYPING_LAYERS_NO_QWERTY>;
            bindings = <&kp RPAR>;
        };
        combo_bracket_left_rh {
            key-positions = <7 8>;
            layers = <TYPING_LAYERS_NO_QWERTY>;
            bindings = <&kp LEFT_BRACKET>;
        };
        combo_bracket_right_rh {
            key-positions = <8 9>;
            layers = <TYPING_LAYERS_NO_QWERTY>;
            bindings = <&kp RIGHT_BRACKET>;
        };
    // ======== Common keys ========

    // ======== Switching between regular layers ========
        // left hand
        combo_to_dvorak_layer_lh {
            key-positions = <16 LMOD>;
            layers = <ALL_LAYERS_NO_QWERTY>;
            bindings = <&to LAYER_DVORAK>;
        };
        combo_to_nav_layer_lh {
            key-positions = <3 LMOD>;
            layers = <ALL_LAYERS_NO_QWERTY>;
            bindings = <&to LAYER_NAV>;
        };
        combo_to_mouse_layer_lh {
            key-positions = <15 LMOD>;
            layers = <ALL_LAYERS_NO_QWERTY>;
            bindings = <&to LAYER_MOUSE>;
        };
        combo_to_spec_layer_lh {
            key-positions = <2 LMOD>;
            layers = <ALL_LAYERS_NO_QWERTY>;
            bindings = <&to LAYER_SPEC>;
        };
        combo_to_numbers_layer_lh {
            key-positions = <14 LMOD>;
            layers = <ALL_LAYERS_NO_QWERTY>;
            bindings = <&to LAYER_NUMBER>;
        };
        combo_to_fn_layer_lh {
            key-positions = <1 LMOD>;
            layers = <ALL_LAYERS_NO_QWERTY>;
            bindings = <&to LAYER_FN>;
        };
        combo_to_hotkey_layer_lh {
            key-positions = <13 LMOD>;
            layers = <ALL_LAYERS_NO_QWERTY>;
            bindings = <&to LAYER_HOTKEY>;
        };
        // right hand
        combo_to_dvorak_layer_rh {
            key-positions = <19 RMOD>;
            layers = <ALL_LAYERS_NO_QWERTY>;
            bindings = <&to LAYER_DVORAK>;
        };
        combo_to_nav_layer_rh {
            key-positions = <8 RMOD>;
            layers = <ALL_LAYERS_NO_QWERTY>;
            bindings = <&to LAYER_NAV>;
        };
        combo_to_mouse_layer_rh {
            key-positions = <20 RMOD>;
            layers = <ALL_LAYERS_NO_QWERTY>;
            bindings = <&to LAYER_MOUSE>;
        };
        combo_to_spec_layer_rh {
            key-positions = <9 RMOD>;
            layers = <ALL_LAYERS_NO_QWERTY>;
            bindings = <&to LAYER_SPEC>;
        };
        combo_to_numbers_layer_rh {
            key-positions = <21 RMOD>;
            layers = <ALL_LAYERS_NO_QWERTY>;
            bindings = <&to LAYER_NUMBER>;
        };
        combo_to_fn_layer_rh {
            key-positions = <10 RMOD>;
            layers = <ALL_LAYERS_NO_QWERTY>;
            bindings = <&to LAYER_FN>;
        };
        combo_to_hotkey_layer_rh {
            key-positions = <22 RMOD>;
            layers = <ALL_LAYERS_NO_QWERTY>;
            bindings = <&to LAYER_HOTKEY>;
        };
    // ======== Switching between regular layers ========

    // ======== Switching to and from Cyrillic layer ========
        // left hand
        combo_cyrillic_to_qwerty_layer_lh {
            key-positions = <4 LMOD>;
            layers = <ALL_LAYERS_NO_QWERTY>;
            bindings = <&macro_switch_language LAYER_QWERTY>;
        };
        combo_cyrillic_to_dvorak_layer_lh {
            key-positions = <16 LMOD>;
            layers = <LAYER_QWERTY>;
            bindings = <&macro_switch_language LAYER_DVORAK>;
        };
        combo_cyrillic_to_nav_layer_lh {
            key-positions = <3 LMOD>;
            layers = <LAYER_QWERTY>;
            bindings = <&macro_switch_language LAYER_NAV>;
        };
        combo_cyrillic_to_mouse_layer_lh {
            key-positions = <15 LMOD>;
            layers = <LAYER_QWERTY>;
            bindings = <&macro_switch_language LAYER_MOUSE>;
        };
        combo_cyrillic_to_spec_layer_lh {
            key-positions = <2 LMOD>;
            layers = <LAYER_QWERTY>;
            bindings = <&macro_switch_language LAYER_SPEC>;
        };
        combo_cyrillic_to_numbers_layer_lh {
            key-positions = <14 LMOD>;
            layers = <LAYER_QWERTY>;
            bindings = <&macro_switch_language LAYER_NUMBER>;
        };
        combo_cyrillic_to_fn_layer_lh {
            key-positions = <1 LMOD>;
            layers = <LAYER_QWERTY>;
            bindings = <&macro_switch_language LAYER_FN>;
        };
        combo_cyrillic_to_hotkey_layer_lh {
            key-positions = <13 LMOD>;
            layers = <LAYER_QWERTY>;
            bindings = <&macro_switch_language LAYER_HOTKEY>;
        };
        // right hand
        combo_cyrillic_to_qwerty_layer_rh {
            key-positions = <7 RMOD>;
            layers = <ALL_LAYERS_NO_QWERTY>;
            bindings = <&macro_switch_language LAYER_QWERTY>;
        };
        combo_cyrillic_to_dvorak_layer_rh {
            key-positions = <19 RMOD>;
            layers = <LAYER_QWERTY>;
            bindings = <&macro_switch_language LAYER_DVORAK>;
        };
        combo_cyrillic_to_nav_layer_rh {
            key-positions = <8 RMOD>;
            layers = <LAYER_QWERTY>;
            bindings = <&macro_switch_language LAYER_NAV>;
        };
        combo_cyrillic_to_mouse_layer_rh {
            key-positions = <20 RMOD>;
            layers = <LAYER_QWERTY>;
            bindings = <&macro_switch_language LAYER_MOUSE>;
        };
        combo_cyrillic_to_spec_layer_rh {
            key-positions = <9 RMOD>;
            layers = <LAYER_QWERTY>;
            bindings = <&macro_switch_language LAYER_SPEC>;
        };
        combo_cyrillic_to_numbers_layer_rh {
            key-positions = <21 RMOD>;
            layers = <LAYER_QWERTY>;
            bindings = <&macro_switch_language LAYER_NUMBER>;
        };
        combo_cyrillic_to_fn_layer_rh {
            key-positions = <10 RMOD>;
            layers = <LAYER_QWERTY>;
            bindings = <&macro_switch_language LAYER_FN>;
        };
        combo_cyrillic_to_hotkey_layer_rh {
            key-positions = <22 RMOD>;
            layers = <LAYER_QWERTY>;
            bindings = <&macro_switch_language LAYER_HOTKEY>;
        };
    // ======== Switching to and from Cyrillic layer ========

    // ======== Cyrillic missing characters and specials ========
        combo_cyrillic_colon {
            key-positions = <7 8>;
            layers = <LAYER_QWERTY>;
            bindings = <&kp LS(N6)>;
        };
        combo_cyrillic_semicolon {
            key-positions = <8 9>;
            layers = <LAYER_QWERTY>;
            bindings = <&kp LS(N4)>;
        };
        combo_cyrillic_question_mark {
            key-positions = <9 10>;
            layers = <LAYER_QWERTY>;
            bindings = <&kp LS(N7)>;
        };
        combo_cyrillic_hard_sign {
            key-positions = <10 11>;
            layers = <LAYER_QWERTY>;
            bindings = <&kp RIGHT_BRACKET>;
        };
    // ======== Cyrillic missing characters and specials ========
        
    };

    keymap {
        compatible = "zmk,keymap";

        layer_dvorak {
            label = "Dvorak";
            bindings = <
                &kp GRAVE    LT_FN SEMI      LT_SPC COMMA    LT_NAV DOT    &kp P        &kp Y            &kp F    &kp G        &kp C        &kp R        &kp L        &kp SLASH
                &kp BSPC     LT_HOT A        LT_NUM O        LT_MOU E      &kp U        &kp I            &kp D    &kp H        LT_SCR T     &kp N        &kp S        &kp MINUS
                &kp DEL      HML_SHF APOS    HML_ALT Q       HML_CMD J     HML_CTR K    &kp X            &kp B    HMR_CTR M    HMR_CMD W    HMR_ALT V    HMR_SHF Z    &kp BACKSLASH

                                                            &kp TAB    &kp SPACE    &kp ENTER            &mkp MB1    &mkp MB2
            >;
        };

        layer_qwerty {
            label = "Qwerty";
            bindings = <
                &kp GRAVE    LLT_FN Q     LLT_SPC W     LLT_NAV E    &kp R        &kp T            &kp Y    &kp U        &kp I            &kp O          &kp P            &kp LEFT_BRACKET
                &trans       LLT_HOT A    LLT_NUM S     LLT_MOU D    &kp F        &kp G            &kp H    &kp J        LT_SCR K         &kp L          &kp SEMICOLON    &kp APOS
                &trans       HML_SHF Z    HML_ALT X     HML_CMD C    HML_CTR V    &kp B            &kp N    HMR_CTR M    HMR_CMD COMMA    HMR_ALT DOT    HMR_SHF SLASH    &kp MINUS

                                                           &trans    &trans    &trans              &trans             &trans
            >;
        };


        layer_special {
            label = "Special";
            bindings = <
                &none     MO_FN      MO_SPC     MO_NAV     &none     &none            &none    &kp AMPS        &kp ASTRK       &kp EQUAL        &kp MINUS        &none
                &trans    MO_HOT     MO_NUM     MO_MOU     &none     &none            &none    &kp DLLR        LT_SCR PRCNT    &kp CARET        &kp BACKSLASH    &none
                &trans    &trans     &trans     &trans     &trans    &none            &none    HMR_CTR EXCL    HMR_CMD AT      HMR_ALT HASH     HMR_SHF SLASH    &none

                                                &trans    &trans    &trans            &trans    &trans
            >;
        };


        layer_number {
            label = "Number";
            bindings = <
                &none     MO_FN      MO_SPC     MO_NAV     &none     &none            &kp MINUS    &kp N7        &kp N8        &kp N9        &kp SLASH      &kp CARET
                &trans    MO_HOT     MO_NUM     MO_MOU     &none     &none            &kp PLUS     &kp N4        LT_SCR N5     &kp N6        &kp ASTRK      &kp EQUAL
                &trans    &trans     &trans     &trans     &trans    &none            &kp N0       HMR_CTR N1    HMR_CMD N2    HMR_ALT N3    HMR_SHF DOT    &none

                                                &trans    &trans    &trans            &trans      &trans
            >;
        };

        layer_nav {
            label = "Navigation";
            bindings = <
                &none     MO_FN      MO_SPC     MO_NAV     &none     &none            &none       &none        &none        &none        &none      &none
                &trans    MO_HOT     MO_NUM     MO_MOU     &none     &none            &none       &kp PG_DN    LT_SCR UP    &kp PG_UP    &none      &none
                &trans    &trans     &trans     &trans     &trans    &none            &kp HOME    &kp LEFT     &kp DOWN     &kp RIGHT    &kp END    &none

                                                &trans    &trans    &trans            &trans        &trans
            >;
        };

        layer_fn {
            label = "FN";
            bindings = <
                &none     MO_FN      MO_SPC     MO_NAV     &none     &none            &none    &kp F9        &kp F10       &kp F11       &kp F12       &bootloader
                &trans    MO_HOT     MO_NUM     MO_MOU     &none     &none            &none    &kp F5        LT_SCR F6     &kp F7        &kp F8        &sys_reset
                &trans    &trans     &trans     &trans     &trans    &none            &none    HMR_CTR F1    HMR_CMD F2    HMR_ALT F3    HMR_SHF F4    &none

                                                &trans    &trans    &trans            &trans    &trans
            >;
        };
        
        layer_hotkey {
            label = "Hotkey";
            bindings = <
                &none     MO_FN      MO_SPC     MO_NAV     &none     &none            &none    &none     &none      &none     &none     &none
                &trans    MO_HOT     MO_NUM     MO_MOU     &none     &none            &none    &none     MO_SCR     &none     &none     &none
                &trans    &trans     &trans     &trans     &trans    &none            &none    &trans    &trans     &trans    &trans    &none

                                                &trans    &trans    &trans            &trans    &trans
            >;
        };

        layer_mouse {
            label = "Mouse";
            bindings = <
                &none     MO_FN      MO_SPC     MO_NAV     &none     &none            &none    &none        &none               &none        &none              &none
                &trans    MO_HOT     MO_NUM     MO_MOU     &none     &none            &none    &mkp MB1     &lmt LR_SCR MB3     &mkp MB2     &none              &none
                &trans    &trans     &trans     &trans     &trans    &none            &none    &mkp MB4     &none               &mkp MB5     &mo LAYER_SNIPE    &none

                                                &trans    &trans    &trans            &trans    &trans
            >;
        };
        
        layer_snipe {
            label = "Snipe";
            bindings = <
                &trans    &trans    &trans    &trans    &trans    &trans            &trans    &trans    &trans    &trans    &trans    &trans
                &trans    &trans    &trans    &trans    &trans    &trans            &trans    &trans    &trans    &trans    &trans    &trans
                &trans    &trans    &trans    &trans    &trans    &trans            &trans    &trans    &trans    &trans    &trans    &trans
                                                                    
                                              &trans    &trans    &trans            &trans    &trans
            >;
        };
        
        layer_scroll {
            label = "Scroll";
            bindings = <
                &trans    &trans    &trans    &trans    &trans    &trans            &trans    &trans    &trans    &trans    &trans    &trans
                &trans    &trans    &trans    &trans    &trans    &trans            &trans    &trans    &trans    &trans    &trans    &trans
                &trans    &trans    &trans    &trans    &trans    &trans            &trans    &trans    &trans    &trans    &trans    &trans
                                                                    
                                              &trans    &trans    &trans            &trans    &trans
            >;
        };

        /*
        // empty_layer {
        //     label = "Empty";
        //     bindings = <
        //         &trans    &trans    &trans    &trans    &trans    &trans            &trans    &trans    &trans    &trans    &trans    &trans
        //         &trans    &trans    &trans    &trans    &trans    &trans            &trans    &trans    &trans    &trans    &trans    &trans
        //         &trans    &trans    &trans    &trans    &trans    &trans            &trans    &trans    &trans    &trans    &trans    &trans
        //                                                                                                                                     
        //                                       &trans    &trans    &trans            &trans    &trans
        //     >;
        // };
        */

    };
};
